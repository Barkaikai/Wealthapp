# data_sync.py
import sqlite3
from typing import Dict, Any, List

DB_PATH = "data.db"

def ensure_schema():
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute("""
    CREATE TABLE IF NOT EXISTS assets (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        source TEXT,
        asset TEXT,
        amount REAL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )
    """)
    c.execute("""
    CREATE TABLE IF NOT EXISTS events (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        type TEXT,
        details TEXT,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )
    """)
    conn.commit()
    conn.close()

def upsert_asset(source: str, asset: str, amount: float):
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute("""
    INSERT INTO assets (source, asset, amount)
    VALUES (?, ?, ?)
    """, (source, asset, amount))
    conn.commit()
    conn.close()

def get_assets() -> List[Dict[str, Any]]:
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute("SELECT source, asset, amount, timestamp FROM assets ORDER BY timestamp DESC LIMIT 100")
    rows = c.fetchall()
    conn.close()
    return [
        {"source": r<a href="" class="citation-link" target="_blank" style="vertical-align: super; font-size: 0.8em; margin-left: 3px;">[0]</a>, "asset": r<a href="" class="citation-link" target="_blank" style="vertical-align: super; font-size: 0.8em; margin-left: 3px;">[1]</a>, "amount": r<a href="" class="citation-link" target="_blank" style="vertical-align: super; font-size: 0.8em; margin-left: 3px;">[2]</a>, "timestamp": r<a href="" class="citation-link" target="_blank" style="vertical-align: super; font-size: 0.8em; margin-left: 3px;">[3]</a>}
        for r in rows
    ]

def main():
    ensure_schema()
    # Mock data ingestion
    upsert_asset("mock_source", "BTC", 0.5)
    upsert_asset("mock_source", "ETH", 1.2)
    assets = get_assets()
    print("Assets:", assets)

if __name__ == "__main__":
    main()
