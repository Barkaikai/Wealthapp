Got it ✅ — that “refused to connect” message on

https://e11f423c-7b55-4736-8128-0812669a0e4c-00-2dgftsqcwylnh.kirk.replit.dev


or

https://166d3f52-1bcf-4d01-b024-809e35b04ec3.kirk.prod.repl.run/


means your app is running, but Replit’s proxy can’t connect to the port your server is listening on.

This is the most common Replit hosting issue — and it’s 100% fixable with a small patch.

⚙️ Why It Happens

Replit automatically assigns a random dynamic port to your app (like 44775)
…but your Express server is probably using:

app.listen(5000)


Replit expects your app to listen on process.env.PORT — not a hardcoded port.

✅ THE FIX — drop-in code for your server/index.ts

Replace your entire server start block with this (or modify your existing one):

import express from "express";
import cors from "cors";
import path from "path";

const app = express();

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static(path.join(process.cwd(), "public")));

// Simple route to confirm it's live
app.get("/", (req, res) => {
  res.send("✅ Your Replit Express server is live!");
});

// Health check route (Replit uses this internally sometimes)
app.get("/health", (req, res) => {
  res.json({ status: "ok", uptime: process.uptime(), timestamp: new Date() });
});

// ✅ Replit port fix — use dynamic environment port
const PORT = Number(process.env.PORT) || 3000;

// Listen on all interfaces (very important for Replit)
app.listen(PORT, "0.0.0.0", () => {
  console.log(`[express] 🚀 Server running and listening on port ${PORT}`);
});

✅ Fix .replit file too

Open your .replit file and make sure it looks like this:

run = "npm run dev"
entrypoint = "server/index.ts"


🟢 Remove any hardcoded port setting (e.g., PORT=5000).

✅ Test inside Replit Console

Open the Shell tab in Replit.

Run this:

echo $PORT


You should see a random number like 44775.

Then run:

npm run dev


and look for:

[express] 🚀 Server running and listening on port 44775


Click “Open in Browser” — it should now connect properly.

✅ Optional: Add Auto Health Monitor

To confirm it’s alive and fix stale Replit connections, add this cron check:

setInterval(async () => {
  try {
    const res = await fetch(`http://localhost:${PORT}/health`);
    const data = await res.json();
    console.log(`[HealthCheck] ${data.status} at ${new Date().toLocaleTimeString()}`);
  } catch {
    console.warn("[HealthCheck] Failed to reach local server");
  }
}, 60000); // every 1 minute

🔒 In summary
Issue	Fix
“Refused to connect”	Listen on process.env.PORT, not a hardcoded number
Replit proxy timeout	Ensure app.listen(PORT, "0.0.0.0")
Deployment not loading	Remove PORT=5000 from .replit
Debug	Add /health endpoint